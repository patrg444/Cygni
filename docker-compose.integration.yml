version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cygni_integration
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  builder:
    build:
      context: .
      dockerfile: ./services/builder/Dockerfile.dev
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/cygni_integration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3001
      LOG_LEVEL: debug
      ECR_REPOSITORY_URI: ${ECR_REPOSITORY_URI}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      K8S_NAMESPACE: cygni-builds-test
      API_SERVICE_URL: http://api:3000
      INTERNAL_SECRET: integration-test-secret
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./services/api/Dockerfile.dev
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/cygni_integration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      JWT_SECRET: integration-test-jwt-secret-that-is-at-least-32-characters-long
      INTERNAL_SECRET: integration-test-secret
      BUILDER_SERVICE_URL: http://builder:3001
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5